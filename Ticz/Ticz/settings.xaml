<Page
    x:Class="Ticz.AppSettingsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Ticz"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"  
    mc:Ignorable="d" d:DesignHeight="2000"
    >

    <Grid x:Name="mainGrid" Background="{ThemeResource SystemControlBackgroundChromeMediumBrush}" Margin="0,0,0,0">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SecondSettings.(Grid.Column)" Value="1" />
                        <Setter Target="SecondSettings.(Grid.Row)" Value="0" />
                        <Setter Target="ThirdSettings.(Grid.Column)" Value="0" />
                        <Setter Target="ThirdSettings.(Grid.Row)" Value="1" />
                        <Setter Target="FirstColumn.Width" Value="*"/>
                        <Setter Target="SecondColumn.Width" Value="*"/>
                    </VisualState.Setters>
                </VisualState>

            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <TextBlock x:Uid="Settings" Grid.Row="0" Grid.Column="0" Style="{ThemeResource TitleTextBlockStyle}" Margin="10,10,10,0" TextWrapping="Wrap" Text="Settings" VerticalAlignment="Center"/>
        <Border VerticalAlignment="Bottom" Grid.Row="1" Canvas.ZIndex="100" Margin="0,0,0,0">
            <local:ucToastMessage DataContext="{Binding Notify}"/>
        </Border>
        <ScrollViewer Grid.Row="1" Margin="10,0,10,0">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="FirstColumn" />
                    <ColumnDefinition x:Name="SecondColumn" Width="0"/>
                </Grid.ColumnDefinitions>
                <StackPanel x:Name="FirstSettings" Grid.Row="0" Grid.Column="0" Orientation="Vertical" Margin="0,0,20,20">
                    <TextBlock    Margin="0,5,0,0" Text="IP Address"/>
                    <TextBox      Text="{Binding ServerIP, Mode=TwoWay}"/>
                    <TextBlock    Margin="0,5,0,0" Text="Port" VerticalAlignment="Center"/>
                    <TextBox      Text="{Binding ServerPort, Mode=TwoWay}" />
                    <TextBlock    Margin="0,5,0,0" Text="Username"/>
                    <TextBox      Text="{Binding Username, Mode=TwoWay}"/>
                    <TextBlock    Margin="0,5,0,0" Text="Password"/>
                    <PasswordBox  Password="{Binding Password, Mode=TwoWay}"/>
                    <Button       Margin="0,5,0,0" Content="Test Connection" Command="{Binding TestConnectionCommand}"/>
                    <TextBlock    Margin="0,5,0,0" Text="{Binding TestConnectionResult}"/>
                    <ProgressBar IsIndeterminate="{Binding TestInProgress}" Background="Transparent"/>
                </StackPanel>
                <StackPanel x:Name="SecondSettings" Grid.Row="1" Grid.Column="0" Orientation="Vertical" Margin="0,0,20,20">
                    <TextBlock    Text="Preferred Theme" Style="{ThemeResource BaseTextBlockStyle}"/>
                    <TextBlock    Text="Select the Theme color you want to use for Ticz (requires a restart)." TextAlignment="Justify" Style="{ThemeResource SettingsExplanationStyle}"/>
                    <StackPanel Orientation="Horizontal">
                        <RadioButton GroupName="ThemeColor" Content="Dark" IsChecked="{Binding UseDarkTheme, Mode=TwoWay}" />
                        <RadioButton GroupName="ThemeColor" Content="Light" IsChecked="{Binding UseLightTheme, Mode=TwoWay}"/>
                    </StackPanel>
                    <TextBlock    Text="Preferred Room" Margin="0,10,0,0" Style="{ThemeResource BaseTextBlockStyle}"/>
                    <TextBlock    Text="Select the room you want to load when Ticz starts." TextAlignment="Justify" Style="{ThemeResource SettingsExplanationStyle}"/>
                    <ComboBox     x:Name="lbRoomToLoad" ItemsSource="{Binding TiczRoomConfigs}" SelectedItem="{Binding PreferredRoom, Mode=TwoWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding RoomName}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <TextBlock    Text="Auto Refresh in seconds" Margin="0,20,0,0" Style="{ThemeResource BaseTextBlockStyle}"/>
                    <TextBlock    Text="After the selected amount of seconds, Ticz will automatically query the Domoticz server for updated values for all devices. Select 0 to disable Auto Refresh" TextAlignment="Justify" Style="{ThemeResource SettingsExplanationStyle}"/>
                    <ComboBox     x:Name="lbSecondsAfterRefresh" ItemsSource="{Binding SecondsForRefreshChoices}" SelectedItem="{Binding SecondsForRefresh, Mode=TwoWay}" />
                    <TextBlock  Text="GridView minimum amount of columns" Margin="0,20,0,0" Style="{ThemeResource BaseTextBlockStyle}"/>
                    <TextBlock  Text="Ensures that devices are shown within the minimum amount of columns selected within the Grid View. Ticz automatically adds more columns when required. It provides a way to fine-tune the amount of devices on the screen." TextAlignment="Justify" Style="{ThemeResource SettingsExplanationStyle}"/>
                    <ComboBox   x:Name="lbNumberColumns" ItemsSource="{Binding NumberOfColumnsChoices}" SelectedItem="{Binding MinimumNumberOfColumns, Mode=TwoWay}" />
                    <TextBlock    Margin="0,10,0,0" Text="Show Last Seen Date/Time" Style="{ThemeResource BaseTextBlockStyle}"/>
                    <TextBlock    Text="Show the Date and Time when the device was last seen by Domoticz. Only visible in Wide View of a device." TextAlignment="Justify" Style="{ThemeResource SettingsExplanationStyle}"/>
                    <ToggleSwitch IsOn="{Binding ShowLastSeen, Mode=TwoWay}" />
                    <TextBlock  Margin="0,10,0,0" Text="Show marquee for Media Players" Style="{ThemeResource BaseTextBlockStyle}"/>
                    <TextBlock  Text="Uses the Data field of a Media Player to show a scrolling textfield which normally represents the 'Now Playing' information" TextAlignment="Justify" Style="{ThemeResource SettingsExplanationStyle}"/>
                    <ToggleSwitch IsOn="{Binding ShowMarquee, Mode=TwoWay}" />
                </StackPanel>
                <Grid x:Name="ThirdSettings" Grid.Row="3" Grid.Column="0" Margin="0,0,0,20" HorizontalAlignment="Stretch">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Text="Room Configurations" Style="{ThemeResource  SubtitleTextBlockStyle}"/>
                    <TextBlock Grid.Row="1" Text="You can define for each room if the room is visible and in what layout it is presented." Style="{ThemeResource SettingsExplanationStyle}"/>
                    <Grid Grid.Row="2" HorizontalAlignment="Stretch" Margin="0" Visibility="Visible">
                        <ListView x:Name="lvRoomConfig" Margin="0" ItemsSource="{Binding TiczRoomConfigs}" ScrollViewer.VerticalScrollMode="Disabled" HorizontalAlignment="Stretch">
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    <Setter Property="Margin" Value="0,0,0,10"/>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.HeaderTemplate>
                                <DataTemplate>
                                    <Grid HorizontalAlignment="Stretch">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="120"/>
                                            <ColumnDefinition Width="120"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Grid.Column="0" Grid.Row="0" VerticalAlignment="Center" Text="Room Name"/>
                                        <TextBlock Grid.Column="1" Grid.Row="0" Margin="10,0,0,0" VerticalAlignment="Center" Text="Show"/>
                                        <TextBlock Grid.Column="2" Grid.Row="0" VerticalAlignment="Center" Text="View"/>
                                    </Grid>
                                </DataTemplate>
                            </ListView.HeaderTemplate>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Grid HorizontalAlignment="Stretch">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="120"/>
                                            <ColumnDefinition Width="120"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Grid.Column="0" Grid.Row="0" Text="{Binding RoomName}"/>
                                        <ToggleSwitch Grid.Column="1" Grid.Row="0" Margin="10,0,0,0" IsOn="{Binding ShowRoom, Mode=TwoWay}" HorizontalAlignment="Left"/>
                                        <ComboBox Grid.Column="2" Grid.Row="0" Width="120" ItemsSource="{Binding ElementName=mainGrid, Path=DataContext.RoomViewChoices}" SelectedValue="{Binding RoomView, Mode=TwoWay}"/>
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Grid>
                </Grid>
            </Grid>
        </ScrollViewer>
    </Grid>
    <Page.BottomAppBar>
        <CommandBar IsOpen="False" IsSticky="False" ClosedDisplayMode="Hidden">
            <CommandBar.Content>
                <StackPanel Orientation="Horizontal">
                    <AppBarButton Name="Back" Icon="Back" Command="{Binding NavigateBackCommand}"/>
                </StackPanel>
            </CommandBar.Content>
        </CommandBar>
    </Page.BottomAppBar>
    <!--<Interactivity:Interaction.Behaviors>
        <Core:EventTriggerBehavior EventName="Loaded">
            <Core:InvokeCommandAction Command="{Binding SettingsPageLoadedCommand}"/>
        </Core:EventTriggerBehavior>
    </Interactivity:Interaction.Behaviors>-->
</Page>
